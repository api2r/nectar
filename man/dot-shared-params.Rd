% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aaa-shared.R
\name{.shared-params}
\alias{.shared-params}
\title{Parameters used in multiple functions}
\arguments{
\item{additional_user_agent}{(\verb{length-1 character}) A string to identify
where a request is coming from. We automatically include information about
your package and nectar, but use this to provide additional details.
Default \code{NULL}.}

\item{api_key}{(\verb{length-1 character}) The API key to use.}

\item{arg}{(\verb{length-1 character}) An argument name as a string. This argument
will be mentioned in error messages as the input that is at the origin of a
problem.}

\item{auth_args}{(\code{list}) An optional list of arguments to the \code{auth_fn}
function.}

\item{auth_fn}{(\code{function}) A function to use to authenticate the request. By
default (\code{NULL}), no authentication is performed.}

\item{base_url}{(\verb{length-1 character}) The part of the url that is shared by
all calls to the API. In some cases there may be a family of base URLs,
from which you will need to choose one.}

\item{body}{(multiple types) An object to use as the body of the request. If
any component of the body is a path, pass it through \code{\link[fs:path]{fs::path()}} or
otherwise give it the class "fs_path" to indicate that it is a path.}

\item{call}{(\code{environment}) The environment from which a function was called,
e.g. \code{\link[rlang:stack]{rlang::caller_env()}} (the default). The environment will be mentioned
in error messages as the source of the error. This argument is particularly
useful for functions that are intended to be called as utilities inside
other functions.}

\item{check_type}{(\verb{length-1 logical}) Whether to check that the response has
the expected content type. Set to \code{FALSE} if the response is not
specifically tagged as the proper type.}

\item{existing_user_agent}{(\verb{length-1 character}, optional) An existing user
agent, such as the value of \code{req$options$useragent} in a \code{\link[httr2:request]{httr2::request()}}
object.}

\item{method}{(\verb{length-1 character}, optional) If the method is something
other than \code{GET} or \code{POST}, supply it. Case is ignored.}

\item{mime_type}{(\verb{length-1 character}) The mime type of any files present in
the body. Some APIs allow you to leave this as NULL for them to guess.}

\item{name}{(\verb{length-1 character}) The name of a package or other thing to
add to or remove from the user agent string.}

\item{pkg_name}{(\verb{length-1 character}) The name of the calling package. This
will usually be automatically determined based on the source of the call.}

\item{pkg_url}{(\verb{length-1 character}) A url for information about the calling
package (default \code{NULL}).}

\item{parameter_name}{(\verb{length-1 character}) The name to use for the API key.}

\item{path}{(\code{character} or \code{list}) The route to an API endpoint. Optionally,
a list or character vector with the path as one or more unnamed arguments
(which will be concatenated with "/") plus named arguments to
\code{\link[glue:glue]{glue::glue()}} into the path.}

\item{query}{(\code{character} or \code{list}) An optional list or character vector of
parameters to pass in the query portion of the request. Can also include a
\code{.multi} argument to pass to \code{\link[httr2:req_url]{httr2::req_url_query()}} to control how
elements containing multiple values are handled.}

\item{req}{(\code{httr2_request}) A \code{\link[httr2:request]{httr2::request()}} object.}

\item{resp}{(\code{httr2_response}) A single \code{\link[httr2:response]{httr2::response()}} object (as
returned by \code{\link[httr2:req_perform]{httr2::req_perform()}}).}

\item{resps}{(\code{httr2_response}, \code{nectar_responses}, or \code{list}) A single
\code{\link[httr2:response]{httr2::response()}} object (as returned by \code{\link[httr2:req_perform]{httr2::req_perform()}}) or a
list of such objects (as returned by \code{\link[=req_perform_opinionated]{req_perform_opinionated()}} or
\code{\link[httr2:req_perform_iterative]{httr2::req_perform_iterative()}}).}

\item{resp_body_fn}{A function to extract the body of the response. Default:
\code{\link[=resp_body_auto]{resp_body_auto()}}.}

\item{response_parser}{(\code{function}) A function to parse the server response
(\code{resp}). Defaults to \code{\link[httr2:resp_body_raw]{httr2::resp_body_json()}}, since JSON responses are
common. Set this to \code{NULL} to return the raw response from
\code{\link[httr2:req_perform]{httr2::req_perform()}}.}

\item{response_parser_args}{(\code{list}) An optional list of arguments to pass to
the \code{response_parser} function (in addition to \code{resp}).}

\item{url}{(\verb{length-1 character}) An optional url associated with \code{name}.}

\item{version}{(\verb{length-1 character}) The version of \code{name}.}

\item{x}{(multiple types) The object to update.}

\item{...}{These dots are for future extensions and must be empty.}
}
\description{
Reused parameter definitions are gathered here for easier editing.
}
\keyword{internal}
