% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resp_tidy.R
\name{resp_tidy}
\alias{resp_tidy}
\title{Extract and clean an API response}
\usage{
resp_tidy(resps)
}
\arguments{
\item{resps}{(\code{httr2_response}, \code{nectar_responses}, or \code{list}) A single
\code{\link[httr2:response]{httr2::response()}} object (as returned by \code{\link[httr2:req_perform]{httr2::req_perform()}}) or a
list of such objects (as returned by \code{\link[=req_perform_opinionated]{req_perform_opinionated()}} or
\code{\link[httr2:req_perform_iterative]{httr2::req_perform_iterative()}}).}
}
\value{
The extracted and cleaned response, or, for a list of responses,
those responses cleaned then concatenated via \code{\link[httr2:resps_successes]{httr2::resps_data()}}. By
default, the response is processed with \code{\link[=resp_body_auto]{resp_body_auto()}}.
}
\description{
API responses generally follow a structured format. Use this function to
extract the relevant portion of a response, and wrangle it into a desired
format. This function is most useful when the response was fetched with a
request that includes a tidying policy (more information about this coming
soon).
}
\seealso{
\code{\link[=resp_tidy_json]{resp_tidy_json()}} for an opinionated response parser for JSON
responses, \code{\link[=resp_body_auto]{resp_body_auto()}} (etc) for a family of response parsers that
attempts to automatically select the appropriate parser based on the
response content type, \code{\link[httr2:resp_body_raw]{httr2::resp_body_raw()}} (etc) for the underlying
httr2 response parsers, and \code{\link[=resp_parse]{resp_parse()}} for an alternative approach to
dealing with responses (particularly useful if the request does not include
a \code{resp_tidy} policy).
}
