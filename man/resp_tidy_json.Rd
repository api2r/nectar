% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resp_tidy_json.R
\name{resp_tidy_json}
\alias{resp_tidy_json}
\title{Extract and clean a JSON API response}
\usage{
resp_tidy_json(resp, spec = NULL, unspecified = "list", subset_path = NULL)
}
\arguments{
\item{resp}{(\code{httr2_response}) A single \code{\link[httr2:response]{httr2::response()}} object (as
returned by \code{\link[httr2:req_perform]{httr2::req_perform()}}).}

\item{spec}{(\code{tspec} or \code{NULL}) A specification used by
\code{\link[tibblify:tibblify]{tibblify::tibblify()}} to parse the extracted body of \code{resp}. When \code{spec}
is \code{NULL} (the default), \code{\link[tibblify:tibblify]{tibblify::tibblify()}} will attempt to guess a
spec.}

\item{unspecified}{(\verb{length-1 character}) A string that describes what
happens if the extracted body of \code{resp} contains fields that are not
specified in \code{spec}. While \code{\link[tibblify:tibblify]{tibblify::tibblify()}} defaults to \code{NULL} for
this value, we set it to \code{list} so that the body will still parse when
\code{resp} contains extra data without throwing errors.}

\item{subset_path}{(\code{character}) An optional vector indicating the path to
the "real" object within the body of \code{resp}. For example, many APIs return
a body with information about the status of the response, cache
information, perhaps pagination information, and then the actual data in a
field such as \code{data}. If the desired part of the response body is in
\code{data$objects}, the value of this argument should be \code{c("data", "object")}.}
}
\value{
The tibblified response body.
}
\description{
Parse the body of a response with \code{\link[httr2:resp_body_raw]{httr2::resp_body_json()}}, extract a named
subset of that body, and tidy the result with \code{\link[tibblify:tibblify]{tibblify::tibblify()}}.
}
