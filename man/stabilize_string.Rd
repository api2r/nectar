% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stabilize.R
\name{stabilize_string}
\alias{stabilize_string}
\title{Ensure an argument is a length-1 character}
\usage{
stabilize_string(
  x,
  ...,
  regex = NULL,
  arg = rlang::caller_arg(x),
  call = rlang::caller_env()
)
}
\arguments{
\item{x}{The argument to stabilize.}

\item{...}{
  Arguments passed on to \code{\link[stbl:stabilize_chr]{stbl::stabilize_chr_scalar}}
  \describe{
    \item{\code{x_class}}{\verb{(length-1 character)} The class name of \code{x} to use in error
messages. Use this if you remove a special class from \code{x} before checking
its coercion, but want the error message to match the original class.}
  }}

\item{regex}{\verb{(character, list, or stringr_pattern)} One or more optional
regular expressions to test against the values of \code{x}. This can be a
character vector, a list of character vectors, or a pattern object from the
\{stringr\} package (e.g., \code{stringr::fixed("a.b")}). The default error
message for non-matching values will include the pattern itself (see
\code{\link[stbl:regex_must_match]{regex_must_match()}}). To provide a custom message, supply a named
character vector where the value is the regex pattern and the name is the
message that should be displayed. To check that a pattern is \emph{not} matched,
attach a \code{negate} attribute set to \code{TRUE}. If a complex regex pattern
throws an error, try installing the stringi package.}

\item{arg}{An argument name as a string. This argument
will be mentioned in error messages as the input that is at the
origin of a problem.}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}
}
\value{
\code{x} coerced to a length-1 character vector, if possible.
}
\description{
Calls to APIs often require a string argument. This function ensures that
those arguments are length-1, non-\code{NA} character vectors, or length-1,
non-\code{NA} vectors that can be coerced to character vectors. This is intended
to ensure that calls to the API will not fail with predictable errors, thus
avoiding unnecessary internet traffic.
}
\examples{
stabilize_string("a")
stabilize_string(1.1)
x <- letters
try(stabilize_string(x))
x <- NULL
try(stabilize_string(x))
x <- character()
try(stabilize_string(x))
x <- NA
try(stabilize_string(x))
}
